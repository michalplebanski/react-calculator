{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","state","addToInput","setState","handleEqual","math","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+SAceA,G,MARA,SAACC,GAAD,OACX,yBAAKC,UAAS,4BAHEC,EAG+BF,EAAMG,SAH5BC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAGkB,WAAP,OAC7DG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,YAEtCH,EAAMG,UANI,IAACD,ICILK,G,MAJD,SAACP,GAAD,OACV,yBAAKC,UAAU,SAASD,EAAMQ,SCKnBC,G,MANK,SAACT,GAAD,OAChB,yBAAKK,QAASL,EAAMU,YAAaT,UAAU,eACtCD,EAAMG,YC0DAQ,G,iNAtDbC,MAAQ,CACNJ,MAAO,I,EAGTK,WAAa,SAACX,GACZ,EAAKY,SAAS,CACZN,MAAO,EAAKI,MAAMJ,MAAQN,K,EAI9Ba,YAAc,WACZ,EAAKD,SAAS,CACZN,MAAOQ,IAAc,EAAKJ,MAAMJ,U,wEAI1B,IAAD,OACP,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAOO,MAAOS,KAAKL,MAAMJ,QACzB,yBAAKP,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,MAEF,yBAAKZ,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,MAEF,yBAAKZ,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,MAEF,yBAAKZ,UAAU,OACb,kBAAC,EAAD,CAAQK,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAaW,KAAKJ,YAA1B,KACA,kBAAC,EAAD,CAAQP,YAAa,kBAAM,EAAKS,gBAAhC,KACA,kBAAC,EAAD,CAAQT,YAAaW,KAAKJ,YAA1B,MAEF,yBAAKZ,UAAU,OACb,kBAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKI,SAAS,CAACN,MAAO,OAAtD,gB,GAhDMU,cCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.823fa338.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\n// test\r\nconst isOperator = (val) => !isNaN(val) || val === '.' || val === '=';\r\n\r\nconst Button = (props) => (\r\n    <div className={`button-container ${isOperator(props.children) ? null : \"operator\"}`}\r\n        onClick={() => props.handleClick(props.children)}\r\n    >\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = (props) => (\r\n    <div className=\"input\">{props.input}</div>\r\n)\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport './ClearButton.css';\r\n\r\nconst ClearButton = (props) => (\r\n    <div onClick={props.handleClear} className=\"clearButton\">\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default ClearButton;","import React, {Component} from 'react';\nimport * as math from 'mathjs';\n\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport ClearButton from './components/ClearButton';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    input: '',\n  }\n\n  addToInput = (val) => {\n    this.setState({\n      input: this.state.input + val,\n    })\n  }\n\n  handleEqual = () => {\n    this.setState({\n      input: math.evaluate(this.state.input)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input={this.state.input} />\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={() => this.handleEqual()}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({input: ''})}>Clear</ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}